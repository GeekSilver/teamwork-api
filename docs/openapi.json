{
  "openapi": "3.0.0",
  "info": {
    "description": "This is the backend part of teamwork app. Teamwork is an internal company app that is aimed at promoting bonding between employees. This api is aimed at facilitating:\n  - Admin Sign In.\n - Creation of employees account by admin.\n - Employee Sign In.\n - Creation of articles by an employee.\n - Retrieval of articles by an employee.\n - Editing of articles by an employee.\n - Employee posting comments on articles.\n - Employee viewing all comments on an article.\n - Employee to view all articles.\n - Employee to view a specific article.\n - Deletion of an employee's articles by an employee.\n - Creation of gifs by an employee.\n - Employee to view all gifs.\n - Employee to view a specific gif.\n - Deletion of an employee's gifs by the employee.\n - Employee posting comments on gifs.\n - Employee viewing all comments on a gif.\n - Catch All requests that don't match any endpoint.\n",
    "version": "1.0.0",
    "title": "Teamwork",
    "contact": {
      "email": "erickioko995@gmail.com"
    },
    "license": {
      "name": "MIT",
      "url": "https://github.com/GeekSilver/teamwork-api/blob/master/LICENSE"
    }
  },
  "servers": [
    {
      "url": "https://teamwork-rest-api.herokuapp.com/teamwork/v1"
    }
  ],
  "paths": {
    "/admin/login": {
      "post": {
        "summary": "Authenticates the admin.",
        "requestBody": {
          "description": "admins credentials.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "example": "postgres@test.com"
                  },
                  "password": {
                    "type": "string",
                    "example": "password"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/200Login"
          },
          "500": {
            "$ref": "#/components/responses/500Error"
          }
        }
      }
    },
    "/admin/employees": {
      "post": {
        "security": [
          {
            "Authorization": []
          }
        ],
        "summary": "admin creates an employee",
        "requestBody": {
          "description": "employee credentials",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "description": "this is the admins id and its always 1",
                    "type": "integer",
                    "example": 1
                  },
                  "name": {
                    "type": "string",
                    "example": "Carlos Vela"
                  },
                  "email": {
                    "type": "string",
                    "example": "vela@la.com"
                  },
                  "password": {
                    "type": "string",
                    "example": "password"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/200Create"
          },
          "500": {
            "$ref": "#/components/responses/500Error"
          }
        }
      }
    },
    "/employees/{id}": {
      "get": {
        "summary": "fetch a specific employees details",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "description": "id of the employee",
            "schema": {
              "type": "integer",
              "example": 34
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful fetch of an employee",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "success"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "example": 424
                        },
                        "name": {
                          "type": "string",
                          "example": "Harry Kim"
                        },
                        "email": {
                          "type": "string",
                          "example": "AliSiddiq@cc.com"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "$ref": "#/components/responses/500Error"
          }
        }
      }
    },
    "/employees/login": {
      "post": {
        "summary": "Authenticate an employee.",
        "requestBody": {
          "description": "employee credentials.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginCredentials"
              }
            }
          }
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/200Login"
          },
          "500": {
            "$ref": "#/components/responses/500Error"
          }
        }
      }
    },
    "/articles": {
      "post": {
        "summary": "create a new article.",
        "security": [
          {
            "Authorization": []
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/Article"
        },
        "responses": {
          "200": {
            "description": "successful creation of an article.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "success"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "article added successfully."
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "$ref": "#/components/responses/500Error"
          }
        }
      },
      "get": {
        "summary": "view articles.",
        "security": [
          {
            "Authorization": []
          }
        ],
        "responses": {
          "200": {
            "description": "an array of articles.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Articles"
                }
              }
            }
          },
          "500": {
            "$ref": "#/components/responses/500Error"
          }
        }
      }
    },
    "/articles/{id}": {
      "put": {
        "summary": "edit article.",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "integer",
              "example": 1
            },
            "required": true,
            "description": "numeric id of the article to edit."
          }
        ],
        "security": [
          {
            "Authorization": []
          }
        ],
        "requestBody": {
          "description": "an article",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ArticleWithId"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "success message.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessMessage"
                }
              }
            }
          },
          "500": {
            "description": "An Exception.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "view specific article.",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "integer",
              "example": 1
            },
            "required": true
          }
        ],
        "security": [
          {
            "Authorization": []
          }
        ],
        "responses": {
          "200": {
            "description": "An article.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Article"
                }
              }
            }
          },
          "500": {
            "$ref": "#/components/responses/500Error"
          }
        }
      },
      "delete": {
        "summary": "delete a specific article",
        "security": [
          {
            "Authorization": []
          }
        ],
        "parameters": [
          {
            "in": "header",
            "description": "custom header containing employee id obtainied after login",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer",
              "example": 9
            }
          },
          {
            "$ref": "#/components/parameters/Id"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/200Create"
          },
          "500": {
            "$ref": "#/components/responses/500Error"
          }
        }
      }
    },
    "/articles/{id}/comments": {
      "post": {
        "summary": "comment on an article.",
        "security": [
          {
            "Authorization": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/Id"
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/Comment"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/200Create"
          },
          "500": {
            "$ref": "#/components/responses/500Error"
          }
        }
      },
      "get": {
        "summary": "view all comments of an article",
        "parameters": [
          {
            "$ref": "#/components/parameters/Id"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/200ArticleComments"
          },
          "500": {
            "$ref": "#/components/responses/500Error"
          }
        }
      }
    },
    "/gifs": {
      "post": {
        "summary": "add a gif",
        "security": [
          {
            "Authorization": []
          }
        ],
        "requestBody": {
          "description": "the gif and employees id",
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "integer",
                    "example": 9
                  },
                  "gif": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "success message.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "success"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "gif added successfully"
                        },
                        "public_id": {
                          "type": "string",
                          "example": "ajdoihJ!Djic98lse3dhoklh"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "$ref": "#/components/responses/500Error"
          }
        }
      },
      "get": {
        "summary": "view all gifs",
        "security": [
          {
            "Authorization": []
          }
        ],
        "responses": {
          "200": {
            "description": "an array of urls for gifs",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "success"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Gif"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "$ref": "#/components/responses/500Error"
          }
        }
      }
    },
    "/gifs/{id}": {
      "delete": {
        "summary": "delete a specific gif.",
        "security": [
          {
            "Authorization": []
          }
        ],
        "parameters": [
          {
            "in": "header",
            "description": "custom header containing employee id obtainied after login",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer",
              "example": 9
            }
          },
          {
            "$ref": "#/components/parameters/Id"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/200Create"
          },
          "500": {
            "$ref": "#/components/responses/500Error"
          }
        }
      },
      "get": {
        "summary": "view a specific gif",
        "security": [
          {
            "Authorization": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/Id"
          }
        ],
        "responses": {
          "200": {
            "description": "an object containing gifs url.",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Gif"
                    }
                  ],
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "success"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/gifs/{id}/comments": {
      "post": {
        "summary": "comment on a gif",
        "security": [
          {
            "Authorization": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/Id"
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/Comment"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/200Create"
          },
          "500": {
            "$ref": "#/components/responses/500Error"
          }
        }
      },
      "get": {
        "summary": "view all comments of a gif",
        "parameters": [
          {
            "$ref": "#/components/parameters/Id"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/200GifComments"
          },
          "500": {
            "$ref": "#/components/responses/500Error"
          }
        }
      }
    },
    "/feed": {
      "get": {
        "summary": "view gifs and articles",
        "security": [
          {
            "Authorization": []
          }
        ],
        "responses": {
          "200": {
            "description": "an array of gifs and articles",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "success"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "anyOf": [
                          {
                            "$ref": "#/components/schemas/Gif"
                          },
                          {
                            "$ref": "#/components/schemas/Article"
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "$ref": "#/components/responses/500Error"
          }
        }
      }
    },
    "/*": {
      "post": {
        "summary": "catch post requests that don't match any endpoint",
        "security": [
          {
            "Authorization": []
          }
        ],
        "requestBody": {
          "description": "json containing id of employee issued upon successful login",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "integer",
                    "example": 9
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/200WildRequest"
          },
          "500": {
            "$ref": "#/components/responses/500Error"
          }
        }
      },
      "get": {
        "summary": "catch get requests that don't match any endpoint.",
        "security": [
          {
            "Authorization": []
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/200WildRequest"
          },
          "500": {
            "$ref": "#/components/responses/500Error"
          }
        }
      }
    }
  },
  "components": {
    "requestBodies": {
      "Article": {
        "description": "an article.",
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/Article"
                }
              ],
              "type": "object",
              "properties": {
                "id": {
                  "description": "employee id",
                  "type": "integer",
                  "example": 9
                }
              }
            }
          }
        }
      },
      "AdminLoginCredentials": {
        "description": "Admin credentials.",
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/LoginCredentials"
            }
          }
        }
      },
      "Comment": {
        "description": "a comment and its owners id.",
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Comment"
            }
          }
        }
      }
    },
    "schemas": {
      "Gif": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "example": 1
          },
          "employee_id": {
            "type": "integer",
            "example": 2
          },
          "created_at": {
            "type": "string",
            "format": "timestamp",
            "example": "2020-01-04 18:42:46.970284"
          },
          "url": {
            "type": "string",
            "format": "url",
            "example": "https://res.cloudinary.com/cloudname/image/upload/v1574790921/yqmwy1usik8mn.jpg"
          }
        }
      },
      "Comment": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "example": 9
          },
          "comment": {
            "type": "string",
            "example": "this is so truee!"
          }
        }
      },
      "ArticleCommentObject": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "example": 59
          },
          "article_id": {
            "type": "integer",
            "example": 530
          },
          "employee_id": {
            "type": "integer",
            "example": 1456
          },
          "created_at": {
            "type": "string",
            "format": "datetime",
            "example": "2020-01-24T07:32:07.366Z"
          },
          "comment": {
            "type": "string",
            "example": "this is so truee!"
          }
        }
      },
      "GifCommentObject": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "example": 13
          },
          "gif_id": {
            "type": "integer",
            "example": 148
          },
          "employee_id": {
            "type": "integer",
            "example": 1496
          },
          "created_at": {
            "type": "string",
            "format": "datetime",
            "example": "2020-01-24T17:44:16.878Z"
          },
          "comment": {
            "type": "string",
            "example": "this is unreal!"
          }
        }
      },
      "LoginCredentials": {
        "type": "object",
        "required": [
          "email",
          "password"
        ],
        "properties": {
          "email": {
            "type": "string",
            "example": "stinson@himym.com"
          },
          "password": {
            "type": "string",
            "example": "password"
          }
        }
      },
      "AuthenticationResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "example": "success"
          },
          "data": {
            "type": "string",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbXBsb3llZ"
          }
        }
      },
      "Error": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "example": "error"
          },
          "error": {
            "type": "string",
            "example": "invalid details."
          }
        }
      },
      "Article": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "example": "Wash your hands after using js!."
          },
          "body": {
            "type": "string",
            "example": ":) just kidding. Lol."
          },
          "category": {
            "type": "string",
            "example": "horror"
          }
        }
      },
      "Articles": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/Article"
        }
      },
      "SuccessMessage": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "example": "success"
          },
          "data": {
            "type": "object",
            "properties": {
              "message": {
                "type": "object",
                "example": "Request Successful."
              }
            }
          }
        }
      },
      "ArticleWithId": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "example": "Its Raining Cats n Dogs."
          },
          "body": {
            "type": "string",
            "example": "Bring me coffee, Anyone. There's a free ticket to Avengers for it."
          },
          "category": {
            "type": "string",
            "example": "horror"
          },
          "id": {
            "type": "integer",
            "example": 9
          }
        }
      }
    },
    "securitySchemes": {
      "Authorization": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    },
    "parameters": {
      "Id": {
        "in": "path",
        "name": "id",
        "required": true,
        "schema": {
          "type": "integer",
          "example": 1
        }
      }
    },
    "responses": {
      "200WildRequest": {
        "description": "successs message.",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "success"
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Your request did not match any path in the api"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "200Create": {
        "description": "Success Message.",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/SuccessMessage"
            }
          }
        }
      },
      "200Login": {
        "description": "A token.",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/AuthenticationResponse"
            }
          }
        }
      },
      "500Error": {
        "description": "An Exception.",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      },
      "200ArticleComments": {
        "description": "An array containing objects with comments",
        "content": {
          "application/json": {
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/ArticleCommentObject"
              }
            }
          }
        }
      },
      "200GifComments": {
        "description": "An array containing objects with comments",
        "content": {
          "application/json": {
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/GifCommentObject"
              }
            }
          }
        }
      }
    }
  }
}